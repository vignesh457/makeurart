{"version":3,"file":"static/js/21.eeb622b7.chunk.js","mappings":"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","sources":["webpack://artgallery/./src/components/LoginBox.module.css?0677","components/LoginBox.jsx","components/OAuthBtn.jsx","firebaseConfig.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"LoginBox_main__mm89O\",\"authHeader\":\"LoginBox_authHeader__Vx-fw\",\"authButton\":\"LoginBox_authButton__k6ctZ\"};","import React,{useState} from 'react'\r\nimport css from './LoginBox.module.css'\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport OAuthBtn from './OAuthBtn'\r\nimport { useDispatch } from 'react-redux';\r\nimport {setCurrentUser} from '../Reducers/UserSlice'\r\nimport {setAlert} from '../Reducers/UserSlice'\r\n\r\nfunction LoginBox() {\r\n    const [userData, setUserData] = useState({username: \"\", password: \"\"})\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async(e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            const userResponse = await fetch(\"/api/auth/login\",{\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(userData),\r\n            });\r\n            const res = await userResponse.json();\r\n            if(res.success===false){\r\n                dispatch(setAlert({type: 'error', message: res.message}))\r\n                return;\r\n            }\r\n            dispatch(setAlert({type: 'success', message: \"Successfully logged in\"}));\r\n            // store the user data to redux\r\n            console.log(res)\r\n            dispatch(setCurrentUser({...res}));\r\n            navigate(\"/\")\r\n        }\r\n        catch(err){\r\n            dispatch(setAlert({type: 'error', message: \"Oops! Something went wrong. Please try again later or contact support.\"}))\r\n            console.log(err);\r\n        }\r\n        //reseting userData\r\n        setUserData({username: \"\", password: \"\"})\r\n    }\r\n    const handleUserData = (e)=>{\r\n        const {name, value} = e.target;\r\n        setUserData({...userData, [name]: value})\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={css.main}>\r\n            <h2 className={css.authHeader}>Welcome to Nooks ðŸ˜Š</h2>\r\n            <label htmlFor=\"email\">\r\n                Email *\r\n                <input type=\"email\" name=\"email\" id=\"email\" placeholder='youremail@example.com' autoComplete=\"email\" onChange={handleUserData} required />\r\n            </label>\r\n            <label htmlFor=\"password\">\r\n                Password *\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder='*****' autoComplete=\"current-password\" onChange={handleUserData} required/>\r\n            </label>\r\n            <button className={css.authButton} type=\"submit\">Log in</button>\r\n            <OAuthBtn/>\r\n            <p>Didn't have an account?  <span style={{color: \"#1976D2\",cursor:\"pointer\"}} onClick={()=>navigate('/signup')}>Sign up</span></p>\r\n        </form>\r\n  )\r\n}\r\n\r\nexport default LoginBox","import React from 'react'\r\nimport {GoogleAuthProvider, getAuth, signInWithPopup} from 'firebase/auth';\r\nimport {app} from '../firebaseConfig';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport {setCurrentUser} from '../Reducers/UserSlice'\r\n\r\nconst mySytle = {\r\n  width: '100%',\r\n  backgroundColor: '#CC2533',\r\n  color: '#D8D8D8',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n  padding: '8px',\r\n  fontWeight: '700',\r\n  fontSize: '15px',\r\n  cursor: 'pointer',\r\n}\r\n\r\nfunction OAuthBtn() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleGoogleAuth = async() => {\r\n    try{\r\n      const provider = new GoogleAuthProvider();\r\n      const auth = getAuth(app);\r\n      const result = await signInWithPopup(auth, provider);\r\n      const userResponse = await fetch(\"/api/auth/google\",{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({username: result.user.displayName, email: result.user.email, password: result.user.uid, avatar: result.user.photoURL})\r\n      })\r\n      const res = await userResponse.json();\r\n      if(res.success===false){\r\n        console.log(\"couldn't authenticate using google : \",res.message);\r\n        return;\r\n      }\r\n      // // store the user data to redux\r\n      dispatch(setCurrentUser({...res}));\r\n      (res.usertype==='none') ? navigate('/user-type') : navigate('/');\r\n    }\r\n    catch(err){\r\n      console.log(\"Oops! Something went wrong. Please try again later or contact support : \" + err);\r\n    }\r\n  }\r\n\r\n  return (\r\n     <button type=\"button\" style={mySytle} onClick={handleGoogleAuth}>Continue with Google</button>\r\n  )\r\n}\r\n\r\nexport default OAuthBtn","import {initializeApp} from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB8WzUiha2EFT3V9JZYyklt8cYExBMs62I\",\r\n    authDomain: \"nooks-e5d79.firebaseapp.com\",\r\n    projectId: \"nooks-e5d79\",\r\n    storageBucket: \"nooks-e5d79.appspot.com\",\r\n    messagingSenderId: \"785309040198\",\r\n    appId: \"1:785309040198:web:e0653336ca7f7da075d447\",\r\n    measurementId: \"G-2M505Y6ZBL\"\r\n};\r\n    \r\nconst app = initializeApp(firebaseConfig);\r\nconst storage = getStorage(app);\r\n\r\n\r\nexport default storage;\r\nexport {app};\r\n"],"names":["_useState","useState","username","password","_useState2","_slicedToArray","userData","setUserData","navigate","useNavigate","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","userResponse","res","wrap","_context","prev","next","preventDefault","fetch","method","headers","body","JSON","stringify","sent","json","success","setAlert","type","message","abrupt","console","log","setCurrentUser","_objectSpread","t0","stop","_x","apply","arguments","handleUserData","_e$target","target","name","value","_defineProperty","_jsxs","onSubmit","className","css","children","_jsx","htmlFor","id","placeholder","autoComplete","onChange","required","OAuthBtn","style","color","cursor","onClick","mySytle","width","backgroundColor","border","borderRadius","padding","fontWeight","fontSize","handleGoogleAuth","provider","auth","result","GoogleAuthProvider","getAuth","app","signInWithPopup","user","displayName","email","uid","avatar","photoURL","usertype","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getStorage"],"sourceRoot":""}