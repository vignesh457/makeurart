{"version":3,"file":"static/js/54.d68d0883.chunk.js","mappings":"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","sources":["components/OAuthBtn.jsx","components/SignupBox.jsx","firebaseConfig.js","webpack://artgallery/./src/components/SignupBox.module.css?b344"],"sourcesContent":["import React from 'react'\r\nimport {GoogleAuthProvider, getAuth, signInWithPopup} from 'firebase/auth';\r\nimport {app} from '../firebaseConfig';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport {setCurrentUser} from '../Reducers/UserSlice'\r\n\r\nconst mySytle = {\r\n  width: '100%',\r\n  backgroundColor: '#CC2533',\r\n  color: '#D8D8D8',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n  padding: '8px',\r\n  fontWeight: '700',\r\n  fontSize: '15px',\r\n  cursor: 'pointer',\r\n}\r\n\r\nfunction OAuthBtn() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleGoogleAuth = async() => {\r\n    try{\r\n      const provider = new GoogleAuthProvider();\r\n      const auth = getAuth(app);\r\n      const result = await signInWithPopup(auth, provider);\r\n      const userResponse = await fetch(\"/api/auth/google\",{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({username: result.user.displayName, email: result.user.email, password: result.user.uid, avatar: result.user.photoURL})\r\n      })\r\n      const res = await userResponse.json();\r\n      if(res.success===false){\r\n        console.log(\"couldn't authenticate using google : \",res.message);\r\n        return;\r\n      }\r\n      // // store the user data to redux\r\n      dispatch(setCurrentUser({...res}));\r\n      (res.usertype==='none') ? navigate('/user-type') : navigate('/');\r\n    }\r\n    catch(err){\r\n      console.log(\"Oops! Something went wrong. Please try again later or contact support : \" + err);\r\n    }\r\n  }\r\n\r\n  return (\r\n     <button type=\"button\" style={mySytle} onClick={handleGoogleAuth}>Continue with Google</button>\r\n  )\r\n}\r\n\r\nexport default OAuthBtn","import React, {useState } from 'react'\r\nimport css from './SignupBox.module.css'\r\nimport { setAlert } from '../Reducers/UserSlice'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport OAuthBtn from './OAuthBtn'\r\nimport { useDispatch } from 'react-redux';\r\nimport {setCurrentUser} from '../Reducers/UserSlice'\r\n\r\nfunction SignupBox() {\r\n    const [userData, setUserData] = useState({username: \"\", email: \"\", password: \"\"})\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const toPascalCase = (str)=>{\r\n        return str.slice(0,1).toUpperCase()+str.slice(1).toLowerCase();\r\n    }\r\n\r\n    const handleSubmit = async(e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            const userResponse = await fetch(\"/api/auth/signup\",{\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(userData),\r\n            });\r\n            const res = await userResponse.json();\r\n            if(res.success===false){\r\n                dispatch(setAlert({type: 'error', message: res.message}))\r\n            }\r\n            dispatch(setAlert({type: 'success', message: \"Signup was successful\"}));\r\n            // store the user data to redux\r\n            dispatch(setCurrentUser({...res}));\r\n            navigate(\"/user-type\");\r\n        }\r\n        catch(err){\r\n            dispatch(setAlert({type: 'error', message: \"Oops! Something went wrong. Please try again later or contact support.\"}))\r\n            console.log(err);\r\n        }\r\n        //reseting userData\r\n        setUserData({username: \"\", email: \"\", password: \"\"})\r\n    }\r\n\r\n    const handleUserData = (e)=>{\r\n        const {name, value} = e.target;\r\n        setUserData({...userData, [name]: value})\r\n    }\r\n\r\n  return (\r\n        <form className={css.main} onSubmit={handleSubmit}>\r\n            <h2 className={css.authHeader}>Welcome to Nooks ðŸ˜Š</h2>\r\n            <label htmlFor=\"username\">\r\n                Username *\r\n                <input type=\"text\" name=\"username\" id=\"username\" value={toPascalCase(userData.username)} onChange={handleUserData} autoComplete=\"username\" placeholder='john' required/>\r\n            </label>\r\n            <label htmlFor=\"email\">\r\n                Email *\r\n                <input type=\"email\" name=\"email\" id=\"email\" value={userData.email} onChange={handleUserData} autoComplete=\"email\" placeholder='youremail@example.com' required/>\r\n            </label>\r\n            <label htmlFor=\"password\">\r\n                Password *\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={userData.password} onChange={handleUserData} autoComplete=\"current-password\" placeholder='*****' required/>\r\n            </label>\r\n            <button className={css.authButton} type=\"submit\">Sign up</button>\r\n            <OAuthBtn/>\r\n            <p>Already have an account?  <span style={{color: \"#1976D2\",cursor:\"pointer\"}} onClick={()=>navigate('/login')}>Log in</span></p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SignupBox","import {initializeApp} from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB8WzUiha2EFT3V9JZYyklt8cYExBMs62I\",\r\n    authDomain: \"nooks-e5d79.firebaseapp.com\",\r\n    projectId: \"nooks-e5d79\",\r\n    storageBucket: \"nooks-e5d79.appspot.com\",\r\n    messagingSenderId: \"785309040198\",\r\n    appId: \"1:785309040198:web:e0653336ca7f7da075d447\",\r\n    measurementId: \"G-2M505Y6ZBL\"\r\n};\r\n    \r\nconst app = initializeApp(firebaseConfig);\r\nconst storage = getStorage(app);\r\n\r\n\r\nexport default storage;\r\nexport {app};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"SignupBox_main__yKg43\",\"authHeader\":\"SignupBox_authHeader__ATM4L\",\"categorySelect\":\"SignupBox_categorySelect__L+g4K\",\"authButton\":\"SignupBox_authButton__A4Bnc\",\"usertypeRadioCtn\":\"SignupBox_usertypeRadioCtn__T3jT6\",\"usertypeRadio\":\"SignupBox_usertypeRadio__fxbtU\",\"creatorHeader\":\"SignupBox_creatorHeader__yPyn-\",\"bioCtn\":\"SignupBox_bioCtn__OtaoP\",\"tagSelectCtn\":\"SignupBox_tagSelectCtn__fSwVN\",\"closeBtn\":\"SignupBox_closeBtn__LgjU5\",\"subHeading\":\"SignupBox_subHeading__HYYUU\",\"usertypeImg\":\"SignupBox_usertypeImg__OlpoP\"};"],"names":["mySytle","width","backgroundColor","color","border","borderRadius","padding","fontWeight","fontSize","cursor","navigate","useNavigate","dispatch","useDispatch","handleGoogleAuth","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","auth","result","userResponse","res","wrap","_context","prev","next","GoogleAuthProvider","getAuth","app","signInWithPopup","sent","fetch","method","headers","body","JSON","stringify","username","user","displayName","email","password","uid","avatar","photoURL","json","success","console","log","message","abrupt","setCurrentUser","_objectSpread","usertype","t0","stop","apply","arguments","_jsx","type","style","onClick","children","str","_useState","useState","_useState2","_slicedToArray","userData","setUserData","handleSubmit","e","preventDefault","setAlert","_x","handleUserData","_e$target","target","name","value","_defineProperty","_jsxs","className","css","main","onSubmit","authHeader","htmlFor","id","slice","toUpperCase","toLowerCase","onChange","autoComplete","placeholder","required","authButton","OAuthBtn","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getStorage"],"sourceRoot":""}