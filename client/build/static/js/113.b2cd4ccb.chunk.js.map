{"version":3,"file":"static/js/113.b2cd4ccb.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/query.ts","../node_modules/@firebase/util/src/subscribe.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/storage/src/implementation/error.ts","../node_modules/@firebase/storage/src/implementation/constants.ts","../node_modules/@firebase/storage/src/implementation/location.ts","../node_modules/@firebase/storage/src/implementation/connection.ts","../node_modules/@firebase/storage/src/implementation/failrequest.ts","../node_modules/@firebase/storage/src/implementation/type.ts","../node_modules/@firebase/storage/src/implementation/url.ts","../node_modules/@firebase/storage/src/implementation/utils.ts","../node_modules/@firebase/storage/src/implementation/request.ts","../node_modules/@firebase/storage/src/implementation/backoff.ts","../node_modules/@firebase/storage/src/implementation/fs.ts","../node_modules/@firebase/storage/src/platform/browser/base64.ts","../node_modules/@firebase/storage/src/implementation/string.ts","../node_modules/@firebase/storage/src/implementation/blob.ts","../node_modules/@firebase/storage/src/implementation/json.ts","../node_modules/@firebase/storage/src/implementation/path.ts","../node_modules/@firebase/storage/src/implementation/metadata.ts","../node_modules/@firebase/storage/src/implementation/requestinfo.ts","../node_modules/@firebase/storage/src/implementation/requests.ts","../node_modules/@firebase/storage/src/platform/browser/connection.ts","../node_modules/@firebase/storage/src/task.ts","../node_modules/@firebase/storage/src/reference.ts","../node_modules/@firebase/storage/src/service.ts","../node_modules/@firebase/storage/src/constants.ts","../node_modules/@firebase/storage/src/api.ts","../node_modules/@firebase/storage/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const result = await db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unique to the `StorageError`.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A `StorageErrorCode` string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   * @param status_ - Corresponding HTTP Status Code\n   */\n  constructor(code: StorageErrorCode, message: string, private status_ = 0) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  get status(): number {\n    return this.status_;\n  }\n\n  set status(status: number) {\n    this.status_ = status;\n  }\n\n  /**\n   * Compares a `StorageErrorCode` against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError` objects.\n */\nexport enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function missingPolyFill(polyFill: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n    `${polyFill} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * 1 second\n */\nexport const DEFAULT_MIN_SLEEP_TIME_MILLIS = 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNode } from '@firebase/util';\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  // Note: The `isNode()` check can be removed when `node-fetch` adds native Blob support\n  // PR: https://github.com/node-fetch/node-fetch/pull/1664\n  return typeof Blob !== 'undefined' && !isNode();\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks the status code to see if the action should be retried.\n *\n * @param status Current HTTP status code returned by server.\n * @param additionalRetryCodes additional retry codes to check against\n */\nexport function isRetryStatusCode(\n  status: number,\n  additionalRetryCodes: number[]\n): boolean {\n  // The codes for which to retry came from this page:\n  // https://cloud.google.com/storage/docs/exponential-backoff\n  const isFiveHundredCode = status >= 500 && status < 600;\n  const extraRetryCodes = [\n    // Request Timeout: web server didn't receive full request in time.\n    408,\n    // Too Many Requests: you're getting rate-limited, basically.\n    429\n  ];\n  const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n  const isAdditionalRetryCode = additionalRetryCodes.indexOf(status) !== -1;\n  return isFiveHundredCode || isExtraRetryCode || isAdditionalRetryCode;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\nimport { isRetryStatusCode } from './utils';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>,\n    private retry = true\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (\n        progressEvent: ProgressEvent\n      ) => void = progressEvent => {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (this.progressCallback_ !== null) {\n          this.progressCallback_(loaded, total);\n        }\n      };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (\n            !hitServer ||\n            (isRetryStatusCode(status, this.additionalRetryCodes_) &&\n              this.retry)\n          ) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string,\n  retry = true\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory,\n    retry\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * Accepts a callback for an action to perform (`doRequest`),\n * and then a callback for when the backoff has completed (`backoffCompleteCb`).\n * The callback sent to start requires an argument to call (`onRequestComplete`).\n * When `start` calls `doRequest`, it passes a callback for when the request has\n * completed, `onRequestComplete`. Based on this, the backoff continues, with\n * another call to `doRequest` and the above loop continues until the timeout\n * is hit, or a successful response occurs.\n * @description\n * @param doRequest Callback to perform request\n * @param backoffCompleteCb Callback to call when backoff has been completed\n */\nexport function start(\n  doRequest: (\n    onRequestComplete: (success: boolean) => void,\n    canceled: boolean\n  ) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  backoffCompleteCb: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      backoffCompleteCb.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      doRequest(responseHandler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function responseHandler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { missingPolyFill } from '../../implementation/error';\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  if (typeof atob === 'undefined') {\n    throw missingPolyFill('base-64');\n  }\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    if ((e as Error).message.includes('polyfill')) {\n      throw e;\n    }\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr: StorageError;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.status = xhr.getStatus();\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  let uploadCommand = '';\n  if (bytesToUpload === 0) {\n    uploadCommand = 'finalize';\n  } else if (bytesLeft === bytesToUpload) {\n    uploadCommand = 'upload, finalize';\n  } else {\n    uploadCommand = 'upload';\n  }\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError,\n  retryLimitExceeded\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\nimport { isRetryStatusCode } from './implementation/utils';\nimport { CompleteFn } from '@firebase/util';\nimport { DEFAULT_MIN_SLEEP_TIME_MILLIS } from './implementation/constants';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private pendingTimeout?: ReturnType<typeof setTimeout>;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  private sleepTime: number;\n\n  private maxSleepTime: number;\n\n  isExponentialBackoffExpired(): boolean {\n    return this.sleepTime > this.maxSleepTime;\n  }\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        const backoffExpired = this.isExponentialBackoffExpired();\n        if (isRetryStatusCode(error.status, [])) {\n          if (backoffExpired) {\n            error = retryLimitExceeded();\n          } else {\n            this.sleepTime = Math.max(\n              this.sleepTime * 2,\n              DEFAULT_MIN_SLEEP_TIME_MILLIS\n            );\n            this._needToFetchStatus = true;\n            this.completeTransitions_();\n            return;\n          }\n        }\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this.sleepTime = 0;\n    this.maxSleepTime = this._ref.storage.maxUploadRetryTime;\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this.pendingTimeout = setTimeout(() => {\n              this.pendingTimeout = undefined;\n              this._continueUpload();\n            }, this.sleepTime);\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e as StorageError;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken,\n        /*retry=*/ false // Upload requests should not be retried as each retry should be preceded by another query request. Which is handled in this file.\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize * 2 < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        } else if (this.pendingTimeout) {\n          clearTimeout(this.pendingTimeout);\n          this.pendingTimeout = undefined;\n          this.completeTransitions_();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    // Note: `type` isn't being used. Its type is also incorrect. TaskEvent should not be a string.\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null,\n    retry = true\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion,\n        retry\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport {\n  EmulatorMockTokenOptions,\n  getModularInstance,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\nexport { StorageError, StorageErrorCode } from './implementation/error';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('storage');\n  if (emulator) {\n    connectStorageEmulator(storageInstance, ...emulator);\n  }\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n"],"names":["stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","_Error","_inherits","_super","_createSuper","_this","_classCallCheck","name","_createClass","_wrapNativeSuper","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","concat","getDefaultEmulatorHost","productName","_a","_b","emulatorHosts","getDefaultEmulatorHostnameAndPort","host","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","getExperimentalSetting","Deferred","_this2","reject","resolve","promise","Promise","key","value","callback","_this3","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","Object","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","getUA","navigator","isMobileCordova","test","isNode","forceEnvironment","prototype","toString","call","isBrowserExtension","runtime","chrome","browser","undefined","id","isReactNative","isIE","ua","indexOf","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","FirebaseError","_Error2","_super2","code","customData","_this4","setPrototypeOf","_assertThisInitialized","captureStackTrace","ErrorFactory","create","service","serviceName","errors","arguments","fullCode","template","data","PATTERN","_","replaceTemplate","fullMessage","isEmpty","obj","hasOwnProperty","deepEqual","a","b","aKeys","keys","bKeys","_i","_aKeys","k","includes","aProp","bProp","isObject","_i2","_bKeys","thing","querystring","querystringParams","params","_loop","_Object$entries$_i","_slicedToArray","_Object$entries","_i3","forEach","arrayVal","encodeURIComponent","entries","querystringDecode","split","_token$split","_token$split2","decodeURIComponent","extractQuerystring","url","queryStart","fragmentStart","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","_this5","observers","unsubscribes","observerCount","task","finalized","then","forEachObserver","observer","next","complete","nextOrObserver","_this6","methods","_step","_iterator","_createForOfIteratorHelper","s","n","done","method","err","f","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","_this7","_this8","getModularInstance","_delegate","asyncGeneratorStep","gen","_next","_throw","arg","_asyncToGenerator","args","apply","_regeneratorRuntime","t","r","o","defineProperty","Symbol","iterator","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","__proto__","awrap","async","reverse","pop","prev","slice","stop","rval","handle","finish","delegateYield","idbProxyableTypes","cursorAdvanceMethods","instanceOfAny","object","constructors","some","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","set","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","_len2","_key2","unwrap","_len3","_key3","storeNames","_len","_key","tx","sort","transformCachableValue","unlisten","removeEventListener","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","_ref3","_callee","storeName","_target","_args","_context","store","index","shift","all","_x","oldTraps","_objectSpread","PlatformLoggerServiceImpl","container","getProviders","map","provider","component","getComponent","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","_defineProperty","name$o","_apps","_components","_addComponent","app","addComponent","debug","_registerComponent","componentName","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","ERRORS","_ERRORS","ERROR_FACTORY","FirebaseAppImpl","options","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","val","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","_step2","ComponentContainer","_iterator2","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","_ref","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","_callee8","idbGetError","_context8","computeKey","t0","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","_callee9","heartbeatObject","_context9","put","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_triggerHeartbeat","platformLogger","agent","date","getPlatformInfoString","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","_getHeartbeatsHeader","_callee2","_extractHeartbeatsFor","heartbeatsToSend","unsentEntries","headerString","_context2","extractHeartbeatsForHeader","toISOString","heartbeatsCache","_step3","maxSize","_iterator3","heartbeatEntry","find","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","_callee3","_context3","_read","_callee4","idbHeartbeatObject","_context4","_callee5","heartbeatsObject","existingHeartbeatsObject","_context5","_x5","_overwrite","_callee6","_context6","_toConsumableArray","_x6","_add","version$1","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","props","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","isComponentEager","_step$value","instanceDeferred","delete","services","from","INTERNAL","_delete","_delete2","opts","_opts$options","isComponentSet","_step2$value","existingCallbacks","Set","add","existingInstance","callbacks","_ref$options","invokeOnInitCallbacks","providers","setComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","_ConsoleMethod","defaultLogHandler","logType","logLevel","_console","_logLevel","_logHandler","_userLogHandler","_len4","_key4","_len5","_key5","_len6","_key6","StorageErrorCode","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","StorageError","_FirebaseError","status_","prependCode","serverResponse","_baseMessage","status","unknown","UNKNOWN","retryLimitExceeded","RETRY_LIMIT_EXCEEDED","canceled","CANCELED","cannotSliceBlob","CANNOT_SLICE_BLOB","invalidArgument","INVALID_ARGUMENT","appDeleted","APP_DELETED","invalidFormat","format","INVALID_FORMAT","internalError","INTERNAL_ERROR","ErrorCode","Location","bucket","path","path_","encode","bucketString","bucketLocation","makeFromUrl","INVALID_DEFAULT_BUCKET","location","bucketDomain","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","INVALID_URL","invalidUrl","FailRequest","promise_","isString","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","queryPart","isRetryStatusCode","additionalRetryCodes","isFiveHundredCode","isExtraRetryCode","isAdditionalRetryCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","retry","pendingConnection_","backoffId_","canceled_","appDelete_","resolve_","reject_","start_","backoffDone","requestWentThrough","connection","wasSuccessCode","getResponse","getErrorText","RequestEndStatus","doRequest","backoffCompleteCb","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","responseHandler","clearGlobalTimeout","clearTimeout","waitMillis","Math","random","stopped","wasTimeout","start","backoffCallback","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","wasCanceled","ABORT","successCode","appDelete","abort","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob$1","bb","append","getBlob","UNSUPPORTED_ENVIRONMENT","decodeBase64","encoded","polyFill","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","rest","percentEncodedBytes_","dataURLBytes_","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","array","dataURL","matches","middle","end","endsWith","FbsBlob","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","buffer","blobby","uint8Arrays","finalLength","merged","jsonObjectOrNull","lastComponent","noXform_","metadata","Mapping","server","local","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","resource","len","mapping","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","RequestInfo","handler","urlParams","headers","body","errorHandler","progressCallback","successCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","alt","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","UNAUTHORIZED_APP","UNAUTHENTICATED","QUOTA_EXCEEDED","UNAUTHORIZED","objectErrorHandler","shared","OBJECT_NOT_FOUND","metadataForUpload_","metadataClone","determineContentType_","multipartUpload","bucketOnlyServerUrl","boundary","genBoundary","metadata_","preBlobPart","postBlobPart","maxUploadRetryTime","requestInfo","uploadData","textFactoryOverride","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","NETWORK_ERROR","setRequestHeader","response","statusText","header","getResponseHeader","listener","upload","XhrTextConnection","_XhrConnection","responseType","newTextConnection","Reference","_service","_location","_newRef","newPath","parent","INVALID_ROOT_OPERATION","invalidRootOperation","uploadBytes$1","ref","_throwIfRoot","storage","makeRequestWithTokens","finalMetadata","getDownloadURL$1","fullServerUrl","maxOperationRetryTime","getDownloadUrl","NO_DOWNLOAD_URL","_getChild$1","childPath","canonicalChildPath","child","refFromPath","FirebaseStorageImpl","_bucket","NO_DEFAULT_BUCKET","reference","ref$1","serviceOrRef","pathOrUrl","extractBucket","makeFromBucketSpec","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","time","POSITIVE_INFINITY","_getAuthToken2","auth","tokenData","_overrideAuthToken","getToken","accessToken","_getAppCheckToken2","appCheck","cancel","clear","requestFactory","authToken","appCheckToken","_this16","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","getPromise","_makeRequestWithTokens","_yield$Promise$all","_yield$Promise$all2","_getAuthToken","_getAppCheckToken","_makeRequest","STORAGE_TYPE","uploadBytes","getDownloadURL","getStorage","bucketUrl","storageInstance","emulator","connectStorageEmulator","mockUserToken","connectStorageEmulator$1","factory","authProvider","appCheckProvider","setMultipleInstances"],"sourceRoot":""}